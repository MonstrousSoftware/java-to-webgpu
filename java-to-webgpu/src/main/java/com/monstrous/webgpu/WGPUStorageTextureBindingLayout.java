package com.monstrous.webgpu;

import com.monstrous.utils.JavaWebGPU;
import com.monstrous.utils.CStrPointer;
import com.monstrous.utils.WgpuJavaStruct;
import com.monstrous.utils.RustCString;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;
import org.jetbrains.annotations.Nullable;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUStorageTextureBindingLayout extends WgpuJavaStruct {

    private final DynamicStructRef<WGPUChainedStruct> nextInChain = new DynamicStructRef<>(WGPUChainedStruct.class);
    private final Struct.Enum<WGPUStorageTextureAccess> access = new Struct.Enum<>(WGPUStorageTextureAccess.class);
    private final Struct.Enum<WGPUTextureFormat> format = new Struct.Enum<>(WGPUTextureFormat.class);
    private final Struct.Enum<WGPUTextureViewDimension> viewDimension = new Struct.Enum<>(WGPUTextureViewDimension.class);

    private WGPUStorageTextureBindingLayout(){}

    @Deprecated
    public WGPUStorageTextureBindingLayout(Runtime runtime){
        super(runtime);
    }

	/**
	* Creates this struct on the java heap.
	* In general, this should <b>not</b> be used because these structs
	* cannot be directly passed into native code. 
	*/
    public static WGPUStorageTextureBindingLayout createHeap(){
        return new WGPUStorageTextureBindingLayout();
    }

	/**
	* Creates this struct in direct memory.
	* This is how most structs should be created (unless, they
	* are members of a nothing struct)
	* 
	* @see WgpuJavaStruct#useDirectMemory
	*/
    public static WGPUStorageTextureBindingLayout createDirect(){
        WGPUStorageTextureBindingLayout struct = new WGPUStorageTextureBindingLayout();
        struct.useDirectMemory();
        return struct;
    }


    public DynamicStructRef<WGPUChainedStruct> getNextInChain(){
        return nextInChain;
    }

    public WGPUStorageTextureBindingLayout setNextInChain(WGPUChainedStruct... x){
        if(x.length == 0 || x[0] == null){
            this.nextInChain.set(JavaWebGPU.createNullPointer());
        } else {
            this.nextInChain.set(x);
        }
        return this;
    }

    public WGPUStorageTextureAccess getAccess(){
        return access.get();
    }

    public WGPUStorageTextureBindingLayout setAccess(WGPUStorageTextureAccess val){
        this.access.set(val); return this;
    }

    public WGPUTextureFormat getFormat(){
        return format.get();
    }

    public WGPUStorageTextureBindingLayout setFormat(WGPUTextureFormat val){
        this.format.set(val); return this;
    }

    public WGPUTextureViewDimension getViewDimension(){
        return viewDimension.get();
    }

    public WGPUStorageTextureBindingLayout setViewDimension(WGPUTextureViewDimension val){
        this.viewDimension.set(val); return this;
    }

}