package com.monstrous.webgpu;

import com.monstrous.utils.JavaWebGPU;
import com.monstrous.utils.CStrPointer;
import com.monstrous.utils.WgpuJavaStruct;
import com.monstrous.utils.RustCString;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;
import org.jetbrains.annotations.Nullable;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUSurfaceCapabilities extends WgpuJavaStruct {

    private final DynamicStructRef<WGPUChainedStructOut> nextInChain = new DynamicStructRef<>(WGPUChainedStructOut.class);
    private final Struct.Unsigned32 usages = new Struct.Unsigned32();
    private final Struct.size_t formatCount = new Struct.size_t();
    private final Struct.Pointer formats = new Struct.Pointer();
    private final Struct.size_t presentModeCount = new Struct.size_t();
    private final Struct.Pointer presentModes = new Struct.Pointer();
    private final Struct.size_t alphaModeCount = new Struct.size_t();
    private final Struct.Pointer alphaModes = new Struct.Pointer();

    private WGPUSurfaceCapabilities(){}

    @Deprecated
    public WGPUSurfaceCapabilities(Runtime runtime){
        super(runtime);
    }

	/**
	* Creates this struct on the java heap.
	* In general, this should <b>not</b> be used because these structs
	* cannot be directly passed into native code. 
	*/
    public static WGPUSurfaceCapabilities createHeap(){
        return new WGPUSurfaceCapabilities();
    }

	/**
	* Creates this struct in direct memory.
	* This is how most structs should be created (unless, they
	* are members of a nothing struct)
	* 
	* @see WgpuJavaStruct#useDirectMemory
	*/
    public static WGPUSurfaceCapabilities createDirect(){
        WGPUSurfaceCapabilities struct = new WGPUSurfaceCapabilities();
        struct.useDirectMemory();
        return struct;
    }


    public DynamicStructRef<WGPUChainedStructOut> getNextInChain(){
        return nextInChain;
    }

    public WGPUSurfaceCapabilities setNextInChain(WGPUChainedStructOut... x){
        if(x.length == 0 || x[0] == null){
            this.nextInChain.set(JavaWebGPU.createNullPointer());
        } else {
            this.nextInChain.set(x);
        }
        return this;
    }

    public long getUsages(){
        return usages.get();
    }

    public WGPUSurfaceCapabilities setUsages(long val){
        this.usages.set(val); return this;
    }

    public long getFormatCount(){
        return formatCount.get();
    }

    public WGPUSurfaceCapabilities setFormatCount(long val){
        this.formatCount.set(val); return this;
    }

    public jnr.ffi.Pointer getFormats(){
        return formats.get();
    }

    public WGPUSurfaceCapabilities setFormats(jnr.ffi.Pointer val){
        this.formats.set(val); return this;
    }

    public long getPresentModeCount(){
        return presentModeCount.get();
    }

    public WGPUSurfaceCapabilities setPresentModeCount(long val){
        this.presentModeCount.set(val); return this;
    }

    public jnr.ffi.Pointer getPresentModes(){
        return presentModes.get();
    }

    public WGPUSurfaceCapabilities setPresentModes(jnr.ffi.Pointer val){
        this.presentModes.set(val); return this;
    }

    public long getAlphaModeCount(){
        return alphaModeCount.get();
    }

    public WGPUSurfaceCapabilities setAlphaModeCount(long val){
        this.alphaModeCount.set(val); return this;
    }

    public jnr.ffi.Pointer getAlphaModes(){
        return alphaModes.get();
    }

    public WGPUSurfaceCapabilities setAlphaModes(jnr.ffi.Pointer val){
        this.alphaModes.set(val); return this;
    }

}