package com.monstrous.webgpu;

import com.monstrous.utils.JavaWebGPU;
import com.monstrous.utils.CStrPointer;
import com.monstrous.utils.WgpuJavaStruct;
import com.monstrous.utils.RustCString;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;
import org.jetbrains.annotations.Nullable;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUVertexBufferLayout extends WgpuJavaStruct {

    private final Struct.Unsigned64 arrayStride = new Struct.Unsigned64();
    private final Struct.Enum<WGPUVertexStepMode> stepMode = new Struct.Enum<>(WGPUVertexStepMode.class);
    private final Struct.size_t attributeCount = new Struct.size_t();
    private final DynamicStructRef<WGPUVertexAttribute> attributes = new DynamicStructRef<>(WGPUVertexAttribute.class);

    private WGPUVertexBufferLayout(){}

    @Deprecated
    public WGPUVertexBufferLayout(Runtime runtime){
        super(runtime);
    }

	/**
	* Creates this struct on the java heap.
	* In general, this should <b>not</b> be used because these structs
	* cannot be directly passed into native code. 
	*/
    public static WGPUVertexBufferLayout createHeap(){
        return new WGPUVertexBufferLayout();
    }

	/**
	* Creates this struct in direct memory.
	* This is how most structs should be created (unless, they
	* are members of a nothing struct)
	* 
	* @see WgpuJavaStruct#useDirectMemory
	*/
    public static WGPUVertexBufferLayout createDirect(){
        WGPUVertexBufferLayout struct = new WGPUVertexBufferLayout();
        struct.useDirectMemory();
        return struct;
    }


    public @jnr.ffi.types.u_int64_t long getArrayStride(){
        return arrayStride.get();
    }

    public WGPUVertexBufferLayout setArrayStride(@jnr.ffi.types.u_int64_t long val){
        this.arrayStride.set(val); return this;
    }

    public WGPUVertexStepMode getStepMode(){
        return stepMode.get();
    }

    public WGPUVertexBufferLayout setStepMode(WGPUVertexStepMode val){
        this.stepMode.set(val); return this;
    }

    public long getAttributeCount(){
        return attributeCount.get();
    }

    public WGPUVertexBufferLayout setAttributeCount(long val){
        this.attributeCount.set(val); return this;
    }

    public DynamicStructRef<WGPUVertexAttribute> getAttributes(){
        return attributes;
    }

    public WGPUVertexBufferLayout setAttributes(WGPUVertexAttribute... x){
        if(x.length == 0 || x[0] == null){
            this.attributes.set(JavaWebGPU.createNullPointer());
        } else {
            this.attributes.set(x);
        }
        return this;
    }

}