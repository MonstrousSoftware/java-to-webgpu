package com.monstrous.webgpu;

import com.monstrous.utils.JavaWebGPU;
import com.monstrous.utils.CStrPointer;
import com.monstrous.utils.WgpuJavaStruct;
import com.monstrous.utils.RustCString;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;
import org.jetbrains.annotations.Nullable;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUSurfaceDescriptorFromCanvasHTMLSelector extends WgpuJavaStruct {

    private final WGPUChainedStruct chain = inner(WGPUChainedStruct.createHeap());
    private final @CStrPointer Struct.Pointer selector = new Struct.Pointer();

    private WGPUSurfaceDescriptorFromCanvasHTMLSelector(){}

    @Deprecated
    public WGPUSurfaceDescriptorFromCanvasHTMLSelector(Runtime runtime){
        super(runtime);
    }

	/**
	* Creates this struct on the java heap.
	* In general, this should <b>not</b> be used because these structs
	* cannot be directly passed into native code. 
	*/
    public static WGPUSurfaceDescriptorFromCanvasHTMLSelector createHeap(){
        return new WGPUSurfaceDescriptorFromCanvasHTMLSelector();
    }

	/**
	* Creates this struct in direct memory.
	* This is how most structs should be created (unless, they
	* are members of a nothing struct)
	* 
	* @see WgpuJavaStruct#useDirectMemory
	*/
    public static WGPUSurfaceDescriptorFromCanvasHTMLSelector createDirect(){
        WGPUSurfaceDescriptorFromCanvasHTMLSelector struct = new WGPUSurfaceDescriptorFromCanvasHTMLSelector();
        struct.useDirectMemory();
        return struct;
    }


    public WGPUChainedStruct getChain(){
        return chain;
    }

    public java.lang.String getSelector(){
        return RustCString.fromPointer(selector.get());
    }

    public WGPUSurfaceDescriptorFromCanvasHTMLSelector setSelector(java.lang.String str){
        this.selector.set(RustCString.toPointer(str)); return this;
    }

}