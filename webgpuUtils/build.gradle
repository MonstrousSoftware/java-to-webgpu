plugins {
    id 'cpp-library'
}

version = '1.0.1'

// Set the target operating system and architecture for this library
library {
    targetMachines.add(machines.windows.x86_64)

}

tasks.withType(CppCompile).configureEach {

    // Define a compiler options
    // Define toolchain-specific compiler options
    compilerArgs.addAll toolChain.map { toolChain ->
        if (toolChain in [ Gcc, Clang ]) {
            return [ '/std:c++11']
        } else if (toolChain in VisualCpp) {
            return ['/PD',  '/Zc:__cplusplus'] //  /Zc:__cplusplus /c']
        }
        return []
    }
}

tasks.withType(LinkSharedLibrary).configureEach {
    linkerArgs.addAll toolChain.map { toolChain ->
        if (toolChain in [ Gcc, Clang ]) {
            return [ 'src/main/lib/*.dll']
        } else if (toolChain in VisualCpp) {
            return ['src/main/lib/*.lib']
        }
        return []
    }
}


task copyDLL(type: Copy) {
    from 'build/lib/main/debug'
    into '../java-to-webgpu/src/main/resources'
    include '*.dll'
    outputs.upToDateWhen { false }
}

tasks.named("build") { finalizedBy("copyDLL") }
